{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","id","put","delete","Notification","notification","message","className","type","Filter","filter","handleFilterChange","value","onChange","PersonForm","newName","newNumber","handleNameChange","handleNumberChange","handleSubmitNew","onSubmit","Person","person","handleDelete","name","number","onClick","Persons","persons","toLowerCase","indexOf","map","App","useState","setPersons","setNewName","setNewNumber","setFilter","setNotification","useEffect","personService","initialPersons","handleEdit","setTimeout","p","catch","error","event","target","preventDefault","oldPerson","find","window","confirm","concat","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b863c3f.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = 'https://phonebook-backend-09541.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => axios.get(baseUrl).then(response => response.data)\r\n\r\nconst create = newPerson => axios.post(baseUrl, newPerson).then(response => response.data)\r\n\r\nconst update = (id, newPerson) => axios.put(`${ baseUrl }/${ id }`, newPerson).then(response => response.data)\r\n\r\nconst deleteOne = (id) => axios.delete(`${ baseUrl }/${ id }`).then(response => response.data)\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    deleteOne,\r\n}","import './App.css'\n\nimport React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Notification = ({ notification }) => {\n  if (notification === null || notification.message === null) {\n    return null\n  }\n\n  return (\n    <div className={ notification.type }>\n      {notification.message}\n    </div>\n  )\n}\n\nconst Filter = ({ filter, handleFilterChange }) => <>filter shown with: <input value={ filter } onChange={ handleFilterChange } /></>\n\nconst PersonForm = ({ newName, newNumber, handleNameChange, handleNumberChange, handleSubmitNew }) => (\n  <form onSubmit={ handleSubmitNew }>\n    <div>\n      name: <input value={ newName } onChange={ handleNameChange } />\n    </div>\n    <div>\n      number: <input value={ newNumber } onChange={ handleNumberChange } />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n)\n\nconst Person = ({ person, handleDelete }) => (\n  <li>\n    { person.name }: { person.number } <button onClick={ () => { handleDelete(person) } }>delete</button>\n  </li>\n)\n\nconst Persons = ({ persons, filter, handleDelete }) => (\n  <ul>\n    { persons\n      .filter(person => person.name.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n      .map(person => <Person key={ person.name } person={ person } handleDelete={ handleDelete } />) }\n  </ul>\n)\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n\n  const [notification, setNotification ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleSubmitNew = event => {\n    event.preventDefault()\n\n    if (newName === '' || newNumber === '') {\n      window.alert('One or more fields are empty.')\n      return\n    }\n\n    const oldPerson = persons.find(person => person.name === newName)\n    if (oldPerson) {\n      if (window.confirm(`\"${ newName }\" is already added to the phonebook, replace the old number with a new one?`)) {\n        handleEdit({...oldPerson, number: newNumber})\n      }\n      return\n    }\n\n    const newPerson = { name: newName, number: newNumber }\n\n    personService\n      .create(newPerson)\n      .then(response => {\n        setNotification({message: `The person '${ response.name }' was successfully created.`, type: 'success'})\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n        setPersons(persons.concat(response))\n      }).catch(error => {\n        setNotification({message: `The person '${ newPerson.name }' could not be created.`, type: 'error'})\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n      })\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleDelete = person => {\n    if (window.confirm(`Delete ${ person.name }?`)) {\n      personService\n      .deleteOne(person.id)\n      .then(response => {\n        setNotification({message: `The person '${ person.name }' was successfully deleted.`, type: 'success'})\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n        setPersons(persons.filter(p => p.id !== person.id))\n      }).catch(error => {\n        setNotification({message: `The person '${ person.name }' was not found in the database.`, type: 'error'})\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n        setPersons(persons.filter(p => p.id !== person.id))\n      })\n    }\n  }\n\n  const handleEdit = person => {\n    personService\n      .update(person.id, person)\n      .then(response => {\n        setNotification({message: `The person '${ person.name }' was successfully edited.`, type: 'success'})\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n        setPersons(persons.map(p => p.id === response.id ? response : p))\n      })\n      .catch(error => {\n        setNotification({message: `The person '${ person.name }' was already deleted or otherwise not found.`, type: 'error'})\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n        setPersons(persons.filter(p => p.id != person.id))\n      })\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={ notification } />\n      <Filter filter={ filter } handleFilterChange={ handleFilterChange } />\n      <h3>Add a new one</h3>\n      <PersonForm \n        newName={ newName } \n        newNumber={ newNumber } \n        handleNameChange={ handleNameChange } \n        handleNumberChange={ handleNumberChange } \n        handleSubmitNew={ handleSubmitNew } />\n      <h3>Numbers</h3>\n      <Persons persons={ persons } filter={ filter } handleDelete={ handleDelete } />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}